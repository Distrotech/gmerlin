
AC_INIT
AC_CONFIG_SRCDIR([include/player.h])

AM_CONFIG_HEADER(include/config.h)

AM_INIT_AUTOMAKE(gmerlin, 0.3.0)

AC_DISABLE_STATIC
dnl AM_DISABLE_STATIC

AC_PROG_LIBTOOL

dnl
dnl Check for Libraries
dnl

dnl Required

PKG_CHECK_MODULES(XML2, libxml-2.0 >= 2.4.0, , AC_MSG_ERROR("libxml2 not found"))
PKG_CHECK_MODULES(GAVL, gavl >= 0.2.0, , AC_MSG_ERROR("gavl not found"))

dnl Gtk

AM_PATH_GTK_2_0(2.2.0, have_gtk=true, have_gtk=false)
AM_CONDITIONAL(HAVE_GTK, test x$have_gtk = xtrue)

dnl Libquicktime

AC_PATH_LQT(0.9.2,  have_lqt=true, have_lqt=false)
AM_CONDITIONAL(HAVE_LQT, test x$have_lqt = xtrue)

dnl ESounD

AM_PATH_ESD(0.2.19, have_esd=true, have_esd=false)
AM_CONDITIONAL(HAVE_ESD,           test x$have_esd = xtrue)

dnl libjpeg

AH_TEMPLATE([HAVE_LIBJPEG],
            [Do we have libjpeg installed?])
                                                                               
have_libjpeg=false
                                                                               
OLD_CFLAGS=$CFLAGS
OLD_LIBS=$LIBS
                                                                               
LIBS=-ljpeg-mmx
CFLAGS=""
                                                                               
AC_MSG_CHECKING(for jpeg-mmx)
AC_TRY_LINK([#include <stdio.h>
             #include <jpeglib.h>],
            [struct jpeg_decompress_struct cinfo;
             jpeg_create_decompress(&cinfo);],
            [have_libjpeg=true])
 
if test x$have_libjpeg = xfalse; then
  AC_MSG_RESULT(no);
  LIBS=-ljpeg
  CFLAGS=""
  AC_MSG_CHECKING(for libjpeg)
  AC_TRY_LINK([#include <stdio.h>
               #include <jpeglib.h>],
              [struct jpeg_decompress_struct cinfo;
               jpeg_create_decompress(&cinfo);],
              [have_libjpeg=true])
fi
                                                                               
case $have_libjpeg in
  true) AC_DEFINE(HAVE_LIBJPEG)
        AC_MSG_RESULT(yes)
        JPEG_LIBS=$LIBS;
        JPEG_CFLAGS=$CFLAGS;;
  false) AC_MSG_RESULT(no); JPEG_LIBS=""; JPEG_CFLAGS="";;
  * ) AC_MSG_RESULT("Somethings wrong: $have_libjpeg") ;;
esac
                                                                               
CFLAGS=$OLD_CFLAGS
LIBS=$OLD_LIBS
                                                                               
AC_SUBST(JPEG_LIBS)
AC_SUBST(JPEG_CFLAGS)
                                                                               
AM_CONDITIONAL(HAVE_LIBJPEG, test x$have_libjpeg = xtrue)

dnl
dnl Common CFLAGS
dnl

CFLAGS="-Wall -D_REENTRANT $GAVL_CFLAGS"

dnl
dnl Build optimization flags
dnl
                        

OPT_CFLAGS=""
TRY_CFLAGS=""
                                                                               
CPU_PENTIUM=false
                                                                               
if test x"$GCC" = x"yes"; then
  CFLAGS="-Wall -finline-functions $CFLAGS"
  TRY_CFLAGS="-O3"
  AC_TRY_CFLAGS([$TRY_CFLAGS],[OPT_CFLAGS=$TRY_CFLAGS])  
  dnl -fomit-frame-pointer
  TRY_CFLAGS="$OPT_CFLAGS -fomit-frame-pointer -funroll-all-loops -falign-functions=2 -falign-loops=2 -falign-jumps=2"
  AC_TRY_CFLAGS([$TRY_CFLAGS],[OPT_CFLAGS=$TRY_CFLAGS])                       
  dnl arch-specific flags
  case "$host_cpu" in
    i386)           TRY_CFLAGS="$OPT_CFLAGS -mcpu=i386";;
    i486)           TRY_CFLAGS="$OPT_CFLAGS -mcpu=i486";;
    i586)           TRY_CFLAGS="$OPT_CFLAGS -mcpu=pentium"; CPU_PENTIUM=true ;;
    i686)           TRY_CFLAGS="$OPT_CFLAGS -mcpu=pentiumpro"; CPU_PENTIUM=true
;;
    k6)             TRY_CFLAGS="$OPT_CFLAGS -mcpu=k6"; CPU_PENTIUM=true ;;
    sparc)          TRY_CFLAGS="$OPT_CFLAGS -mcpu=ultrasparc -mvis";;
  esac
AC_TRY_CFLAGS([$TRY_CFLAGS],[OPT_CFLAGS=$TRY_CFLAGS])
fi


dnl
dnl Now, build the final CFLAGS.
dnl
                                                                               
have_debug=false
                                                                                
AC_ARG_ENABLE(debug,
AC_HELP_STRING([--enable-debug],[Enable debugging (disable optimization)]),
[case "${enableval}" in
   yes) have_debug=true ;;
   no)  have_debug=false ;;
esac],have_debug=false)
 
case $have_debug in
  true) CFLAGS="-g $CFLAGS";;
  false) CFLAGS="$CFLAGS $OPT_CFLAGS";;
esac

LIBS="$GAVL_LIBS"

dnl Output variables

if test "x$prefix" = xNONE; then
   prefix="${ac_default_prefix}"
fi
if test "x$exec_prefix" = xNONE; then
   exec_prefix="${prefix}"
fi

GMERLIN_PLUGIN_DIR="$exec_prefix/lib/$PACKAGE/plugins"
GMERLIN_DATA_DIR="$prefix/share/$PACKAGE"

AC_DEFINE_UNQUOTED(GMERLIN_DATA_DIR, "$GMERLIN_DATA_DIR", Directory for other data)
AC_DEFINE_UNQUOTED(GMERLIN_PLUGIN_DIR, "$GMERLIN_PLUGIN_DIR", Directory for plugins)

AC_SUBST(GMERLIN_DATA_DIR)
AC_SUBST(GMERLIN_PLUGIN_DIR)

INCLUDES='-I$(top_builddir)/include'
AC_SUBST(INCLUDES)


dnl Configuration Subdirectiories

dnl AC_CONFIG_SUBDIRS(src/mad src/liba52 src/mpeg2dec)
AC_CONFIG_FILES([Makefile \
gmerlin.spec \
gmerlin.pc \
apps/Makefile \
apps/ossmixer/Makefile \
apps/plugincfg/Makefile \
apps/player/Makefile \
icons/Makefile \
tests/Makefile \
include/Makefile \
include/gui_gtk/Makefile \
lib/Makefile \
lib/gtk/Makefile \
plugins/Makefile \
plugins/x11/Makefile \
plugins/esd/Makefile \
plugins/lqt/Makefile \
plugins/oss/Makefile \
plugins/jpeg/Makefile \
skins/Makefile \
skins/Default/Makefile])

AC_OUTPUT

