\input texinfo   @c -*-texinfo-*-
@comment %**start of header
@include version.texi
@setfilename gmerlin.info
@settitle Gmerlin @value{VERSION}
@syncodeindex pg cp
@comment %**end of header
@copying
This manual is for Gmerlin
(version @value{VERSION}, @value{UPDATED}).

Copyright @copyright{} 2001-2006 Members of the Gmerlin project.

@quotation
Permission is granted to copy, distribute and/or modify this document
under the terms of the GNU Free Documentation License, Version 1.1 or
any later version published by the Free Software Foundation; with no
Invariant Sections, with the Front-Cover Texts being ``A GNU Manual,''
and with the Back-Cover Texts as in (a) below.  A copy of the
license is included in the section entitled ``GNU Free Documentation
License.''

(a) The FSF's Back-Cover Text is: ``You have freedom to copy and modify
this GNU Manual, like GNU software.  Copies published by the Free
Software Foundation raise funds for GNU development.''
@end quotation
@end copying

@titlepage
@title Gmerlin
@subtitle for version @value{VERSION}, @value{UPDATED}
@author Burkhard Plaum (@email{gmerlin@@users.sourceforge.net})
@page
@vskip 0pt plus 1filll
@insertcopying
@end titlepage

@contents

@ifnottex
@node Top

@insertcopying
@end ifnottex

@menu
* Basics::
* Installation::
* General usage information::
* Applications::
* FAQ::
* Get involved::
* Index::
@end menu

@node Basics
@chapter Basics
This manual should help you to get familiar with gmerlin software. The
gmerlin software is quite modular, because it consists of multiple
packages, most of which can be used independently. In this document,
it is assumed, that you have all packages installed (See Installation below).

@node Installation
@chapter Installation

@menu
* Requirements::
* Compilation and installation::
* Binary codecs::
@end menu

@node Requirements
@section Requirements

For compiling x264, you need @uref{http://nasm.sourceforge.net/, nasm}
(@uref{http://www.tortall.net/projects/yasm/, yasm} on x86_64).
They are included in
most distributions. Required libraries can be installed from source or from
binary packages. In the latter case, you must install the development
packages (e.g. libfoo-devel-1.2.3-4.i386.rpm) also. This is what you need:

@table @emph

@item @uref{http://www.alsa-project.org/, Alsa}
It's the recommended audio architecture

@item @uref{http://www.tux.org/~ricdude/EsounD.html, esound}
Only needed if neither Alsa nor OSS work for you.

@item @uref{http://flac.sourceforge.net/, flac}
For en-/decoding flac files (optional).

@item @uref{http://www.gtk.org/, gtk-2.4.x}
This is needed for compiling the GUI applications. Without it you'll
get just the core library, which won't be of much use.

@item @uref{http://www.ijg.org/, libjpeg}
For reading and writing single JPEG images (strongly recommended)

@item @uref{http://www.libpng.org/pub/png/libpng.html, libpng}
For reading and writing single PNG images (strongly recommended).
Also for decoding png encoded Quicktime and AVI files

@item @uref{http://www.remotesensing.org/libtiff/, libtiff}
For reading and writing single TIFF images (Optional)

@item @uref{http://www.xmlsoft.org/, libxml}
Required. All kinds of configuration files as well as the media
tree are xml based.

@item @uref{http://www.vorbis.com/, vorbis}
Needed for en-/decoding Vorbis files. Also required for the
theora encoding.

@item @uref{http://musicbrainz.org/products/client/index.html, libmusicbrainz}
Needed for getting Audio CD metadata using
@uref{http://musicbrainz.org/, musicbrainz}

@item @uref{http://libcddb.sourceforge.net/, libcddb}
Needed for getting Audio CD metadata from CDDB servers

@item Headers for libXv and libXinerama
These are usually shipped with X11 but some distributions pack the header
files separately (e.g. libxv-dev, libxinerama-dev). libXv is needed for
hardware accelerated video playback, libXinerama adds support for
multi-screen configurations.

@item @uref{http://www.samba.org/, libsmbclient}
For loading smb:// URLs (optional).
@end table

From now on, there are 2 ways to proceed:
@itemize @bullet
@item You can download the
@uref{http://sourceforge.net/project/showfiles.php?group_id=19684&package_id=151779, gmerlin-dependencies}
package, unpack it and install it using the instructions in the README file.
A full dependencies install will provide you with the complete codec support,
but some packages you already have might be installed a second time.
Everything, however, gets into /opt/gmerlin, so there will be no conflicts.

@item To have more control over the process, download and install the
libraries listed below manually. 
@end itemize

@table @emph
@item @uref{http://www.gnu.org/software/libcdio/, libcdio}
Neccessary for the VCD, Audio CD and DVD plugins.

@item @uref{http://www.audiocoding.com/, faad2}
Needed for MPEG-4 audio support (mp4, aac files).

@item @uref{http://www.audiocoding.com/, faac}
Needed for MPEG-4 audio encoding (.aac files) and for AAC encoding via
libquicktime.

@item @uref{http://www.ffmpeg.org/, FFmpeg}
Many codecs, strongly recommended. You should get a sufficiently new
version from @uref{http://ffmpeg.mplayerhq.hu/download.html, ffmpeg SVN}
and use --enable-shared when calling configure. Another option is the
version in the
@uref{http://sourceforge.net/project/showfiles.php?group_id=19684&package_id=151779, gmerlin-dependencies} package.

@item @uref{http://www.mp3dev.org/, lame}
For encoding mp3 files and AVIs with mp3 audio streams with libquicktime.

@item @uref{http://mad.sourceforge.net/, mad}
For playing MPEG-1/2 audio (e.g. mp3)

@item @uref{http://freshmeat.net/redir/libdvdread/17926/url_homepage/downloads.shtml, libdvdread}
For playing DVDs. Gmerlins method of accessing DVD drives doesn't
differ much from others. Thus, DVD playback howtos found in the web
apply for gmerlin as well.

@item @uref{http://developers.videolan.org/x264.html, x264}
For H.264 encoding with libquicktime.

@item @uref{http://developers.videolan.org/libdca.html, libdca}
For decoding DTS streams.

@item @uref{http://libmpeg2.sourceforge.net/, libmpeg2}
For decoding MPEG-1/2 Video (like .mpg files and DVD video)

@item @uref{http://liba52.sourceforge.net/, liba52}
For playing AC3 (aka DVD audio) streams.

@item @uref{http://www.musepack.net/, libmpcdec}
For playing musepack files (optional).

@item @uref{http://www.theora.org/, theora}
For en-/decoding theora video (optional).
 
@item @uref{http://www.speex.org/, speex}
For en-/decoding Speex streams (optional).

@item @uref{http://libquicktime.sourceforge.net/, libquicktime}
Optional, for the libquicktime based encoding and decoding plugins.
Mostly necessary if you want to encode video. For decoding Quicktime,
gmerlin_avdecoder is a lot better.

@item @uref{http://mjpeg.sourceforge.net/, mjpegtools}
Optional for en-/decoding yuv4mpeg streams and for encoding high
quality MPEG video using mpeg2enc and friends.

@item @uref{http://www.ladspa.org, Ladspa plugins}
Optional for audio filters/effects. Good experiences were made with
the plugin packages @uref{http://www.ladspa.org/cmt/,cmt},
@uref{http://plugin.org.uk, swh-plugins} and
@uref{http://tap-plugins.sourceforge.net, tap-plugins}. Gmerlin looks for them
at runtime, so you can install them at any time.

@end table

@node Compilation and installation
@section Compilation and installation

If you downloaded a release, make sure, that you have the latest
version of all packages. Alternatively, you can download the latest
@uref{http://sourceforge.net/project/showfiles.php?group_id=19684&package_id=151778, gmerlin-all-in-one}
package. It contains all source packages together
with optional scripts to build and install them. Check the included
README file.

We always try to be compatible ther GNU build system. This means, that
all gmerlin packages are compiled using the usual
@code{./configure; make; su; make install} prodecure. Type
@code{./configure --help} to see the supported options.

The order is the following:

@itemize
@item @uref{http://sourceforge.net/project/showfiles.php?group_id=19684&package_id=50349, gavl}
@item @uref{http://sourceforge.net/project/showfiles.php?group_id=19684&package_id=14511, gmerlin}
@item @uref{http://sourceforge.net/project/showfiles.php?group_id=19684&package_id=124659, gmerlin_avdecoder}
@item @uref{http://sourceforge.net/project/showfiles.php?group_id=19684&package_id=152799, gmerlin-encoders}
@item @uref{http://sourceforge.net/project/showfiles.php?group_id=19684&package_id=124661, gmerlin-visualizer}
@end itemize

@node Binary codecs
@section Binary codecs

These must be downloaded from the @uref{http://www1.mplayerhq.hu/MPlayer/releases/codecs/, MPlayer codec page}. Download the file
essential-YYYYMMDD.tar.bz2, where YYYYMMDD is some date. Unpack the
.tar.bz2 and move the included files to /usr/lib/codecs. At this
location, the DLLs will also be found by other players.

@node General usage information
@chapter General usage information

@menu
* Configuration data::
* GUI::
* Remote control::
* Commandline options::
@end menu

@node Configuration data
@section Configuration data

They are saved in the directory @code{~/.gmerlin}, which has subdirectories
for all applications. The directory "generic" stores common configuration
data for applications, which have no config dialog. Plugins used by these
programs can be configured with the gmerlin_plugincfg application. If a
program misbehaves, especially after a version upgrade, delete the file
@code{~/.gmerlin/application_dir/config.xml}, where @code{application_dir}
corresponds to the application. Normally, this shouldn't be necessary.

All applications except gmerlin_visualizer have their own configuration data.
This means, that changes made to plugin configurations are not shared between
these applications. Most applications have a configuration dialog, which
lets you change some global settings. Then, there is a plugin dialog,
which lets you select and configure plugins. It might be a bit tricky to
find out if a special option can be set via the the plugin dialog or via
the global config dialog. The general rule is: All features, which are
supported independently from any plugins, are configured in the global
dialog. You can expect them to be present on every gmerlin installation
of the same version. The plugin dialog changes depending on what plugins
are installed. That's the reason, why they are separated.

@node GUI
@section GUI
We try to make this as consistent as possible across the applications.
In many windows, you'll see context sensitive menus when you right
click somewhere. Furthermore, tooltips are enabled in all programs by
default. You can, however, switch them off if they bother you. 

@strong{Some GUI tips}

@itemize
@item Many buttons, which are assosiated with a list, are disabled unless you select an item in the list
@item Doubleclicking onto the background of a slider (@strong{not} the slider itself) resets it to the
      factory default
@end itemize
 

@node Remote control

@section Remote control
The player and the transcoder are remotely controllable by the commandline
programs @code{gmerlin_remote} and @code{gmerlin_transcoder_remote}
respectively.
Call them with @code{-help} as argument to see the options. The remote servers
listen at ports starting with 10101 by default. You can change these via
environment variables:

@table @var
@item GMERLIN_PLAYER_REMOTE_PORT
Port for the player remote, default 10101

@item GMERLIN_TRANSCODER_REMOTE_PORT
Port for the transcoder remote, default 10102
@end table

By default, remote enabled applications will listen on the localhost
(127.0.0.1) only. If you want to control your gmerlin applications from
other computers too, enable it in their config dialogs.

Remote commands can be used to launch gmerlin and/or open files, urls
and devices. They allow seamless integration of gmerlin into existing
desktop systems. Finally there is a script @code{gmerlin_launcher}. It can be
used as a Mime handler by filenamagers and webbrowsers. If
@code{gmerlin_launcher}
is called with a file or URL as argument, it will launch a gmerlin player
if neccessary, add the location to the Incoming album and start playing it.

@node Commandline options
@section Commandline options
@strong{Warning, the commandline syntax is not completely frozen yet. It may
change slightly or completely in future releases}

Commandline options are divided into simple ones and the ones, which
set parameters.

The following options should always be supported by all applications: 

@table @code
@item -v <num>
Set verbosity level. Values are
@table
@item 0
Be completely quiet
@item 1
Print errors only
@item 2
Like 1 but print warnings also
@item 3
Like 2 but print info messages also
@item 4
Like 3 but print debug messages also
@end table
@item -help
Print a help and exit. Pipe it into a pager to enable scrolling, like
@code{gmerlin_player -help | less -R}.
@end table

Commandline options for parameters are handled completely analogous
to the configuration dialogs of GUI applications, i.e. for each
configuration item, which shows up in a GUI application, you'll have a
parameter on the commandline.

In General options have the form

@code{'parameter1=value1:parameter2=value2...'}

The quotes are necessary, if the string contains characters, which
have a special meaning for the shell.

The syntax of values depends on the type:
@table @strong
@item Boolean
Value can be either 0 or 1.
@item Integer values
An integer number.
@item Float values
A floating point (i.e. fractional) number.
@item Strings
A string. Colons ':' should be escaped with '\'.
@item Time
Time is in the format @code{@{[[HH:]MM:]SS@}} while the seconds can be
fractional. Hours and Minutes are optional, thus any format of
@code{@{5.5@}}, @code{@{0:05.5@}} or @code{@{0:00:05.5}@} is valid for a time
of 5.5 seconds. Writing @code{0} instead of @code{00} is also ok.
@item Enumeration with suboptions
Value is in the form
@code{string[@{subparameter1=subvalue1:subparameter2=subvalue2...@}]}.
The subparameters are optional. E.g. if the option is for selecting a
plugin, setting string to @code{foo} will select the plugin @code{foo} and
pass the subparameters (if avaliable) to the @code{foo} plugin.
@item List with suboptions
This is like enumeration with suboptions with the difference, that
you can concatenate multiple options together with colons (:) and
must enclose everything with braces. For example:

@code{@{opt1@{param1=value1@}:opt2@{param2=value2@}@}

If you use @code{-help}, you'll also see supported ranges for
numeric types, or supported options for strings (if available).

@end table


@node Applications
@chapter Applications

@menu
* Player::
* Transcoder::
* Alsamixer::
@end menu

@node Player
@section Player
Type @code{gmerlin} with optionally any number of files or URLs to start this.

@menu
* Media tree::
* The main window::
* The video window::
@end menu

@node Media tree
@subsection Media tree

The media tree can be used to store and organize your media collection.
It consists of virtual folders called @emph{albums}. You can create albums,
subalbums and move stuff between them like you want. The media files
always stay at the same place in the filesystem. The albums can be either
in own windows (Windowed mode) or as tabs in the tree window (tabbed mode).
The tree- and album windows remember their screen positions.

You can create your own albums by right clicking onto the parent album in
the tree and select Album->New. Whenever you doubleclick a track, it will
be played immediately. In addition to the regular albums, there are a
number of special albums:

@itemize @bullet
@item @emph{Incoming:} It's the destination for tracks, which come from
the comandline or from the remote.

@item @emph{Favourites:} Each regular album has a Favourites button, which
lets you copy the selected tracks to the favourites. It's useful for
quickly making a selection of tracks from multiple different albums.

@item @emph{Plugin and device albums:} Each plugin, which handles e.g.
cdrom drives, will create a plugin album. The available devices are
then autoscanned and added as subalbums. Device albums are a bit limited:
You can delete or reorder tracks, but you cannot move tracks from/to other
albums.

@end itemize

Adding tracks to the media tree can happen in multiple ways:

@itemize @bullet
@item Drag Files or URLs from filenanagers or webbrowsers into an album
folder in the tree or into an album directly.
@item Use the buttons in the album toolbar, or the right click menu
@item Via the right-click menu (Album->New from directory...) of the tree
window, you can import entire directory trees. Subdirectories will be added
as subalbums if you want.
@item Configure @code{gmerlin_launcher} as a MIME Handler for the supported
filetypes in your desktop environment. @code{gmerlin_launcher} will then
send all doubleclicked files into the @emph{Incoming}-album. 
@end itemize

Drag and Drop is supported:
@itemize @bullet
@item Inside the tree window to move albums (inclusive subalbums) around
@item From one regular album to another. By default, tracks are moved.
  Press the @key{CTRL}-key before dragging, and the tracks will be copied.
@item Inside all albums to sort the tracks
@item From an album window into the tree window to transfer tracks to
  another album

@end itemize

If you close the currently played album during playback, the player will
stop after the current track is finished. You can then select another
album by doubleclicking a track inside it.

Inside the album, you have the following shortcuts:

@strong{Global commands}
@table @kbd
@item @key{CTRL}+G
Pop up current album and goto current track

@item @key{CTRL}+O
Pop up preferences dialog

@item @key{CTRL}+P
Pop up plugin dialog

@item @key{CTRL}+Q
Quit program
@end table

@strong{Navigation}
@table @kbd
@item UP/DOWN
Move the cursor one track up/down

@item PAGEUP/PAGEDOWN
Move the cursor one page up/down

@item Mousewheel
Scroll
@end table

@strong{Selecting}
@table @kbd

@item SHIFT+UP/DOWN
Move the cursor one track up/down and select track

@item SHIFT+PAGEUP/PAGEDOWN
Move the cursor one page up/down and select tracks

@item CTRL+UP/DOWN
Move the cursor one track up/down and unselect track

@end table

@strong{Player control}
@table @kbd

@item CTRL+PAGEUP/PAGEDOWN
Goto previous/next track

@item CTRL+LEFT/RIGHT
Seek backwards/forwards

@item SHIFT+LEFT/RIGHT
Decrease/Increase volume

@end table

@strong{Edit}
@table @kbd
@item CTRL+C
Copy selected tracks to clipboard

@item CTRL+X
Cut selected tracks to clipboard

@item CTRL+V
Paste tracks from clipboard at the current cursor position
@end table

@strong{Favourites}
@table @kbd
@item F10
Copy selected tracks to favourites
@end table

@node The main window
@subsection The main window

It's a usual player window, with self explanatory buttons. The menu
button will show the main menu of the player. It lets you configure
plugins and other global settings, show other windows, launch other
applications and so on.

You have the following keyboard shortcuts:

@strong{Global commands}
@table @kbd
@item @key{CTRL}+G
Pop up current album and goto current track

@item @key{CTRL}+O
Pop up preferences dialog

@item @key{CTRL}+P
Pop up plugin dialog

@item @key{CTRL}+Q
Quit program

@end table

@strong{Player control}
@table @kbd

@item CTRL+PAGEUP/PAGEDOWN
Goto previous/next track

@item CTRL+LEFT/RIGHT
Seek backwards/forwards

@item 0
Seek to start

@item SHIFT+LEFT/RIGHT
Decrease/Increase volume

@item SPACE
Toggle play/pause

@end table

@node The video window
@subsection The video window

This comes only when gmerlin has to show some video or still images. It
is created and owned by the video output plugin (i.e. it has nothing to
do with the core GUI). Currently, only an X11 plugin is available. It
has some special features: You can zoom or squeeze the image to make
your favourite tradeoff between aspect ratio distortion, black borders
or cropped images.

You have the following shortcuts:

@strong{Global commands}
@table @kbd
@item @key{CTRL}+G
Pop up current album and goto current track

@item @key{CTRL}+O
Pop up preferences dialog

@item @key{CTRL}+P
Pop up plugin dialog

@item @key{CTRL}+Q
Quit program
@end table

@strong{Zoom/Squeeze}
@table @kbd

@item CTRL+PLUS/MINUS
Increase/decrease aspect ratio (squeeze)

@item CTRL+MOUSEWHEEL
Increase/decrease aspect ratio (squeeze)

@item ALT+PLUS/MINUS
Increase/decrease zoom factor

@item ALT+MOUSEWHEEL
Increase/decrease zoom factor

@item HOME
Reset zoom and squeeze

@end table

@strong{Brightness, Saturation, Contrast}
@table @kbd

@item B/b
Increase/decrease brightness

@item S/s
Increase/decrease saturation

@item C/c
Increase/decrease contrast
@end table

@strong{Fullscreen}

@table @kbd
@item TAB
Toggle fullscreen/windowed mode
@end table

@strong{Player control}
@table @kbd

@item CTRL+PAGEUP/PAGEDOWN
Goto previous/next track

@item CTRL+LEFT/RIGHT
Seek backwards/forwards

@item 0
Seek to start

@item SHIFT+LEFT/RIGHT
Decrease/Increase volume

@item SPACE
Toggle play/pause

@end table

@node Transcoder
@section Transcoder

Type @code{gmerlin_transcoder} to start this. It has only one window,
which contains the tasklist. A tasklist stores ALL information necessary
to transcode the track. This includes codec settings, bitrates etc. You can
load and save tasklists, the current tasklist is remembered.

New tracks can be added in various ways:

@itemize @bullet
@item By dragging files or URLs from filenanagers or webbrowsers into the tasklist
@item By using the buttons in lower toolbar or the right click menu
@item From the player by right clicking into an album end select Selected->Transcode
@item By dragging tracks from a gmerlin album into the tasklist
@end itemize

The @emph{upper toolbar} controls global things. Here you can select and configure
plugins as defaults for newly added tracks. Moreover, you can load/save
tasklists, start/stop transcoding, set some global options and track defaults and
quit the program.

The @emph{lower toolbar} provides operations, which are applied for the
currently selected tracks. Some of them require just one track to be selected.

For configuring tracks, first, set the encoding plugins with Selected->Change
encoders. Then configure the encoders with Selected->Configure. The task list
has also a right-click-menu with more stuff.

@node Alsamixer
@section Alsamixer

This is a mixer program, which is still convenient, if you have multiple soundcards
with 100s of options each. It provides widgets for almost all soundcard parameters,
which are supported by alsa.

By right clicking on a control, you can:

@itemize @bullet
@item Move controls inside the window
@item Move controls to own windows. To move them back to main window,
  simply close the control-windows.
@item Pop up a dialog, where you can select which controls will be shown at all
@end itemize

All window configurations and coordinates are remembered. The actual mixer
settings are @emph{not} remembered, since this is done globally by the
Alsa startup scripts.
  
@node FAQ
@chapter FAQ

@menu
* General questions::
* Installation questions::
* Usage questions::
@end menu

@node General questions
@section General questions

@node Installation questions
@section Installation questions

@strong{Q:} @emph{Why do I have to install so many packages to get all features?}

@strong{A:} Because having one huge package is not good for people, who want to use
only one small subset of the included libraries or applications. To make installation
a bit easier, there are the gmerlin-dependencies and gmerlin-all-in-one packages.

@strong{Q:} @emph{How do I enable Ladspa plugins?}

@strong{A:} Gmerlin looks for Ladspa plugins in @code{/usr/lib/ladspa} and
@code{/usr/local/lib/ladspa} by default. Additional paths can be set with the
@code{LADSPA_PATH} enviromnent variable.

@strong{Q:} @emph{Which Ladspa plugins work with gmerlin?}

@strong{A:} All plugins, which have either 1 or 2 input and output ports. The numbers
of input- and output ports must be equal.

@strong{Q:} How do I enable DVB?

@strong{A:} Gmerlin looks for DVB devices in /dev/dvb. Then, you must pass gmerlin
  a channel configuration file created with the @uref{http://www.linuxtv.org/wiki/index.php/LinuxTV_dvb-apps,dvb-apps}
  tools. Check the documentation coming with dvb-apps for how to create channel files. Gmerlin looks for channel maps
  in the directories @code{$HOME/.szap}, @code{$HOME/.tzap}, @code{$HOME/.czap},
  @code{$HOME/.azap}, @code{$HOME/.mplayer} and @code{$HOME/.xine}. The first time, you load the DVB plugin,
  and each time you changed your channel map, the plugin will tune to each transponder and get the full
  information about the programs (the information provided by dvp-apps is not sufficient). This can take some time.
  
@node Usage questions
@section Usage questions

@strong{Q:} @emph{Ok, I compiled gmerlin and started the player, now how do I  play a file?}

@strong{A:} The best way is to first create an album (right click onto the
root item in the tree). Then open the album and, in the album view,
use one of the buttons at the bottom to open a file or URL. Or drag the
file from a filemanager into an album.

@strong{Q:} @emph{Can I play a VCD image from harddisk before burning?}

@strong{A:} Yes. If you use vcdimager, you have 2 files: a .bin file and a .cue
   file. If you load the .cue file with the avdecoder plugin, you'll be
   able to play the VCD image.

@strong{Q:} @emph{Can I play a DVD image from harddisk or from a mounted DVD drive?}

@strong{A:} Yes, in the dvd directory, go to the subdirectory @code{video_ts} and load the
   file @code{video_ts.ifo}.
   
@strong{Q:} @emph{Can I play an audio CD image from harddisk before burning?}

@strong{A:} Not yet.

@strong{Q:} @emph{How can I make gmerlin the default audio CD player on my Desktop environment?}

@strong{A:} First, find out how to configure the default audio CD player on your system.
   Usually, you can set a command, which is executed, when a new audio cd is inserted.
   Assuming your cdrom device is @code{/dev/hdd}, the command for opening and playing
   an audio cd is:

   @code{gmerlin_remote -launch -openplay cda:///dev/hdd}

   If you just want ot open the CD (without starting playback), use:

   @code{gmerlin_remote -launch -open cda:///dev/hdd}
   
@strong{Q:} @emph{How can I make gmerlin the default DVD player on my Desktop environment?}

@strong{A:} Same as for audio CDs, but replace @code{cda://} with @code{dvd://}.

@strong{Q:} @emph{How can I configure gmerlin as a Mime handler for media files on my Desktop environment?}

@strong{A:} Find out how to set up mime handlers (e.g. right click onto a file and select ``Open with...'').
   Then, enter the command @code{gmerlin_launcher}.
   
@strong{Q:} @emph{How can I map multimedia keys on my keyboard to gmerlin functions?}

@strong{A:} You need some way to configure custom shell commands for multimedia keys. Check the
documentation of your Desktop system. To remote control gmerlin, use the commandline program
@code{gmerlin_remote}. Type @code{gmerlin_remote -help} for supported options and commands.
   
@node Get involved
@chapter Get involved

Contribution to gmerlin can happen at several skill levels:

@itemize @bullet
@item Report bugs and installation problems, tell about features you'd like to see.
@item Tell us about files, which cannot be played. An URL and some infos (e.g. MPlayer plays it fine) can help a lot.
@item Make skins. In /usr/local/gmerlin/skins/Default/skin.xml, you'll find an example skin description file.
@item Assembler gurus can write more speed optimized routines for gavl
@item Mathematics gurus can write more accurate routines for the higher quality
levels of gavl. 
@end itemize

@node Index
@unnumbered Index

@printindex cp
@bye

